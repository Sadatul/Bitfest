version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_DB=bitfest
      - POSTGRES_USER=byteforger
      - POSTGRES_PASSWORD=byteforgers
    ports:
      - "5432:5432"
    networks:
      - hackathon_network
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U byteforger -d bitfest'" ]
      interval: 5s
      timeout: 5s
      retries: 5
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
  # redis:
  #   image: redis/redis-stack:latest
  #   container_name: redis-stack
  #   # volumes:
  #   #   - ${PWD}/redis-stack.conf:/redis-stack.conf
  #   ports:
  #     - "6379:6379"
  #     - "8001:8001"
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "ping" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - hackathon_network
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_URL=postgresql://byteforger:byteforgers@postgres_db:5432/bitfest
      - SUPABASE_JWT_PUBLIC_KEY=${SUPABASE_JWT_PUBLIC_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - QDRANT_URL=${QDRANT_URL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_HOST=redis-stack
      - REDIS_PORT=6379

    ports:
      - "8080:8080"
    networks:
      - hackathon_network
  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333" # REST API port
      - "6334:6334" # gRPC port
      # volumes:
      #   - qdrant_data:/qdrant/storage
    environment:
      - QDRANT_ALLOW_CORS=true
    networks:
      - hackathon_network

volumes:
  postgres_data:
  qdrant_data:
networks:
  hackathon_network:
